---
import path from "node:path"
import { getCollection } from "astro:content"
import License from "@components/misc/License.astro"
import Markdown from "@components/misc/Markdown.astro"
import MainGridLayout from "@layouts/MainGridLayout.astro"
import { url, getDir, getPostUrlBySlug } from "@utils/url-utils"
import { Breadcrumbs } from "astro-breadcrumbs"
import "astro-breadcrumbs/breadcrumbs.css"
import { Icon } from "astro-icon/components"
import { licenseConfig } from "src/config"
import PostMetadata from "../../components/PostMeta.astro"
import ImageWrapper from "../../components/misc/ImageWrapper.astro"
import { profileConfig } from "../../config"
import { formatDateToYYYYMMDD } from "../../utils/date-utils"

export async function getStaticPaths() {
  const blogEntries = await getCollection("commands", ({ data }) => {
    return import.meta.env.PROD ? data.draft !== true : true
  })
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}

interface Props {
  entry: Entry
}

interface Entry {
  data: Post

  render: () => any
  slug: string
  id: string
}

interface Post {
  image: string
  title: string
  description: string
  spanish: string
  published: Date
  tags: string[]
  category: string
  isSpanish: boolean
  hasSpanish: boolean

  nextSlug: string
  prevSlug: string
  nextTitle: string
  prevTitle: string
}

const { entry } = Astro.props
const {
  image,
  title,
  description,
  spanish,
  published,
  tags,
  category,
  hasSpanish,
  isSpanish,
} = entry.data
const { Content } = await entry.render()

const { remarkPluginFrontmatter } = await entry.render()

console.log("entry", entry)

const jsonLd = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: entry.data.title,
  description: entry.data.description || entry.data.title,
  keywords: entry.data.tags,
  author: {
    "@type": "Person",
    name: profileConfig.name,
    url: Astro.site,
  },
  datePublished: formatDateToYYYYMMDD(entry.data.published),
  // TODO include cover image here
}
---

<MainGridLayout banner={image} title={title} description={description}>
  <script
    slot="head"
    type="application/ld+json"
    set:html={JSON.stringify(jsonLd)}
  />
  <div
    class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative mb-4"
  >
    <div
      id="post-container"
      class:list={[
        "card-base z-10 px-6 md:px-9 pt-6 pb-4 relative w-full ",
        {},
      ]}
    >
      <!-- <Breadcrumbs>
        <svg
          slot="separator"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <polyline points="9 18 15 12 9 6"></polyline>
        </svg>
      </Breadcrumbs> -->
      <!-- Spanish translation -->
      {
        hasSpanish && !isSpanish && (
          <div class="flex items-center my-3">
            <div class="meta-icon">
              <Icon name="material-symbols:translate" class="text-xl" />
            </div>
            <div class="flex flex-row flex-nowrap items-center">
              <a
                href={`/commands/${entry.slug}/es/`}
                aria-label="View post in spanish"
                class="link-lg transition text-50 text-sm font-medium
                                    hover:text-[var(--primary)] dark:hover:text-[var(--primary)] whitespace-nowrap"
              >
                Ver en espa√±ol
              </a>
            </div>
          </div>
        )
      }

      <!-- title -->
      <div class="relative onload-animation">
        <div
          data-pagefind-body
          data-pagefind-weight="10"
          data-pagefind-meta="title"
          class="flex items-center mb-3 md:before:w-1 before:h-5 before:rounded-md before:bg-[var(--primary)]
                    before:absolute before:top-[0.75rem] before:left-[-1.125rem]"
        >
          <div
            class="transition font-bold
                    md:text-[2.5rem]/[2.75rem]
                    text-black/90 dark:text-white/90"
          >
            {entry.data.title}
          </div>
          {
            isSpanish && (
              <div class="mx-3">
                <span class="transition font-bold md:text-[1.3rem]/[1.55rem] text-black/90 code-version px-1">
                  es
                </span>
              </div>
            )
          }
        </div>
      </div>

      <!-- metadata -->
      <div class="onload-animation">
        <PostMetadata
          class="mb-5"
          published={published}
          tags={tags}
          category={category}
        />
        {
          !entry.data.image && (
            <div class="border-[var(--line-divider)] border-dashed border-b-[1px] mb-5" />
          )
        }
      </div>

      <!-- always show cover as long as it has one -->
      {
        entry.data.image && (
          <ImageWrapper
            src={entry.data.image}
            basePath={path.join("content/posts/", getDir(entry.id))}
            class="mb-8 rounded-xl banner-container onload-animation"
          />
        )
      }

      <Markdown class="mb-6 markdown-content onload-animation">
        <Content />
      </Markdown>

      {
        licenseConfig.enable && (
          <License
            title={entry.data.title}
            slug={entry.slug}
            pubDate={entry.data.published}
            class="mb-6 rounded-xl license-container onload-animation"
          />
        )
      }
    </div>
  </div>

  <div
    class="flex flex-col md:flex-row justify-between mb-4 gap-4 overflow-hidden w-full"
  >
    <a
      href={getPostUrlBySlug(entry.data.nextSlug)}
      class="w-full font-bold overflow-hidden active:scale-95"
    >
      {
        entry.data.nextSlug && (
          <div class="btn-card rounded-2xl w-full h-[3.75rem] max-w-full px-4 flex items-center justify-start gap-4">
            <Icon
              name="material-symbols:chevron-left-rounded"
              size={32}
              class="text-[var(--primary)]"
            />
            <div class="overflow-hidden transition overflow-ellipsis whitespace-nowrap max-w-[calc(100%_-_3rem)] text-black/75 dark:text-white/75">
              {entry.data.nextTitle}
            </div>
          </div>
        )
      }
    </a>

    <a
      href={getPostUrlBySlug(entry.data.prevSlug)}
      class="w-full font-bold overflow-hidden active:scale-95"
    >
      {
        entry.data.prevSlug && (
          <div class="btn-card rounded-2xl w-full h-[3.75rem] max-w-full px-4 flex items-center justify-end gap-4">
            <div class="overflow-hidden transition overflow-ellipsis whitespace-nowrap max-w-[calc(100%_-_3rem)] text-black/75 dark:text-white/75">
              {entry.data.prevTitle}
            </div>
            <Icon
              name="material-symbols:chevron-right-rounded"
              size={32}
              class="text-[var(--primary)]"
            />
          </div>
        )
      }
    </a>
  </div>
</MainGridLayout>

<style is:global>
  @tailwind components;

  #post-container :nth-child(1) {
    animation-delay: calc(var(--content-delay) + 0ms);
  }
  #post-container :nth-child(2) {
    animation-delay: calc(var(--content-delay) + 50ms);
  }
  #post-container :nth-child(3) {
    animation-delay: calc(var(--content-delay) + 100ms);
  }
  #post-container :nth-child(4) {
    animation-delay: calc(var(--content-delay) + 175ms);
  }
  #post-container :nth-child(5) {
    animation-delay: calc(var(--content-delay) + 250ms);
  }
  #post-container :nth-child(6) {
    animation-delay: calc(var(--content-delay) + 325ms);
  }

  @layer components {
    .meta-icon {
      @apply w-8 h-8 transition rounded-md flex items-center justify-center bg-[var(--btn-regular-bg)]
        text-[var(--btn-content)] mr-2;
    }

    .code-version {
      @apply transition rounded-md bg-[var(--btn-regular-bg)] text-[var(--btn-content)];
      padding-bottom: 2px;
    }
  }
</style>
